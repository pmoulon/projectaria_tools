"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6025],{15680:(t,e,a)=>{a.r(e),a.d(e,{MDXContext:()=>o,MDXProvider:()=>c,mdx:()=>N,useMDXComponents:()=>p,withMDXComponents:()=>s});var r=a(96540);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(){return i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t},i.apply(this,arguments)}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function d(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function m(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var o=r.createContext({}),s=function(t){return function(e){var a=p(e.components);return r.createElement(t,i({},e,{components:a}))}},p=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):d(d({},e),t)),a},c=function(t){var e=p(t.components);return r.createElement(o.Provider,{value:e},t.children)},u="mdxType",g={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},x=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,l=t.parentName,o=m(t,["components","mdxType","originalType","parentName"]),s=p(a),c=n,u=s["".concat(l,".").concat(c)]||s[c]||g[c]||i;return a?r.createElement(u,d(d({ref:e},o),{},{components:a})):r.createElement(u,d({ref:e},o))}));function N(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=x;var d={};for(var m in e)hasOwnProperty.call(e,m)&&(d[m]=e[m]);d.originalType=t,d[u]="string"==typeof t?t:n,l[1]=d;for(var o=2;o<i;o++)l[o]=a[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}x.displayName="MDXCreateElement"},87521:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var r=a(58168),n=(a(96540),a(15680));const i={sidebar_position:20,title:"Dataset Explorer Filters"},l="Aria Dataset Explorer Filters",d={unversionedId:"open_datasets/dataset_explorer/dataset_explorer_filters",id:"open_datasets/dataset_explorer/dataset_explorer_filters",title:"Dataset Explorer Filters",description:"The following filters can be used with the Aria Dataset Explorer.",source:"@site/docs/open_datasets/dataset_explorer/dataset_explorer_filters.mdx",sourceDirName:"open_datasets/dataset_explorer",slug:"/open_datasets/dataset_explorer/dataset_explorer_filters",permalink:"/projectaria_tools/docs/open_datasets/dataset_explorer/dataset_explorer_filters",draft:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/open_datasets/dataset_explorer/dataset_explorer_filters.mdx",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20,title:"Dataset Explorer Filters"},sidebar:"tutorialSidebar",previous:{title:"Aria Dataset Explorer",permalink:"/projectaria_tools/docs/open_datasets/dataset_explorer/"},next:{title:"Aria Everyday Activities Dataset",permalink:"/projectaria_tools/docs/open_datasets/aria_everyday_activities_dataset/"}},m={},o=[{value:"Universal filters",id:"universal-filters",level:2},{value:"Dataset Specific Filters",id:"dataset-specific-filters",level:2},{value:"ADT Specific Filters",id:"adt-specific-filters",level:3},{value:"Nymeria Specific Filters",id:"nymeria-specific-filters",level:3}],s={toc:o},p="wrapper";function c(t){let{components:e,...a}=t;return(0,n.mdx)(p,(0,r.A)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,n.mdx)("h1",{id:"aria-dataset-explorer-filters"},"Aria Dataset Explorer Filters"),(0,n.mdx)("p",null,"The following filters can be used with the ",(0,n.mdx)("a",{parentName:"p",href:"https://explorer.projectaria.com/"},"Aria Dataset Explorer"),"."),(0,n.mdx)("h2",{id:"universal-filters"},"Universal filters"),(0,n.mdx)("table",null,(0,n.mdx)("thead",{parentName:"table"},(0,n.mdx)("tr",{parentName:"thead"},(0,n.mdx)("th",{parentName:"tr",align:null},(0,n.mdx)("strong",{parentName:"th"},"Name")),(0,n.mdx)("th",{parentName:"tr",align:null},(0,n.mdx)("strong",{parentName:"th"},"Type")),(0,n.mdx)("th",{parentName:"tr",align:null},(0,n.mdx)("strong",{parentName:"th"},"Description")))),(0,n.mdx)("tbody",{parentName:"table"},(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"video_uid"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"UID of sequence")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"device_serial"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Serial number of the Project Aria glasses used to make the recording, eg 1WM103600M1292")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"duration_s"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"Number of seconds a recording took, eg 122.47")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"sensor.slam_camera_fps"),(0,n.mdx)("td",{parentName:"tr",align:null},"int"),(0,n.mdx)("td",{parentName:"tr",align:null},"Number of frames per second recorded by the monoscene/SLAM cameras, eg 30")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"sensor.rgb_camera_fps"),(0,n.mdx)("td",{parentName:"tr",align:null},"int"),(0,n.mdx)("td",{parentName:"tr",align:null},"Number of frames per second recorded by the RGB camera, eg 30")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"sensor.et_camera_fps"),(0,n.mdx)("td",{parentName:"tr",align:null},"int"),(0,n.mdx)("td",{parentName:"tr",align:null},"Number of frames per second recorded by the Eye Tracking cameras")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"sensor.rgb_image_height"),(0,n.mdx)("td",{parentName:"tr",align:null},"int"),(0,n.mdx)("td",{parentName:"tr",align:null},"How many pixels high the image is, eg 1408")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"sensor.rgb_image_width"),(0,n.mdx)("td",{parentName:"tr",align:null},"int"),(0,n.mdx)("td",{parentName:"tr",align:null},"How many pixels wide the image is, eg 1408")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"light_intensity_lux_median"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"Median level of illumination in a recording, measured in lux, eg 107.26")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"computed.trajectory_length_m"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"Number of meters traversed in the recording, derived from MPS ",(0,n.mdx)("a",{parentName:"td",href:"/projectaria_tools/docs/data_formats/mps/slam/mps_trajectory"},"Closed Loop Trajectory")," data, eg 63.41. This is calculated by summing the total distance in between each image frame.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"computed.covered_area_m2"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"Area traversed in the recording in meters squared, derived from MPS ",(0,n.mdx)("a",{parentName:"td",href:"/projectaria_tools/docs/data_formats/mps/slam/mps_trajectory"},"Closed Loop Trajectory")," data, eg 28.20. This is calculated by computing a bounding box in the xy plane defined by the trajectory, and taking its area.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"computed.covered_volume_m3"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"Volume traversed in the recording in meters cubed, derived from MPS ",(0,n.mdx)("a",{parentName:"td",href:"/projectaria_tools/docs/data_formats/mps/slam/mps_trajectory"},"Closed Loop Trajectory")," data, eg 17.12. This is calculated by computing a 3D bounding box in the xyz plane defined by the trajectory, and taking its volume.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"computed.speed_mps_mean"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"Average speed in the recording in meters per second, calculated by dividing the trajectory length by the duration of the recording, eg 0.5177")))),(0,n.mdx)("h2",{id:"dataset-specific-filters"},"Dataset Specific Filters"),(0,n.mdx)("p",null,"Some datasets have additional metadata that can be used as filters, such as activities or objects interacted with in the Aria Digital Twin (ADT) dataset."),(0,n.mdx)("h3",{id:"adt-specific-filters"},"ADT Specific Filters"),(0,n.mdx)("table",null,(0,n.mdx)("thead",{parentName:"table"},(0,n.mdx)("tr",{parentName:"thead"},(0,n.mdx)("th",{parentName:"tr",align:null},(0,n.mdx)("strong",{parentName:"th"},"Name")),(0,n.mdx)("th",{parentName:"tr",align:null},(0,n.mdx)("strong",{parentName:"th"},"Type")),(0,n.mdx)("th",{parentName:"tr",align:null},(0,n.mdx)("strong",{parentName:"th"},"Description")))),(0,n.mdx)("tbody",{parentName:"table"},(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"Scene"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Scene name for the sequence (either Apartment or Office)")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"is_multi_person"),(0,n.mdx)("td",{parentName:"tr",align:null},"Bool"),(0,n.mdx)("td",{parentName:"tr",align:null},"True if the sequence was recording concurrently with another sequence")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"num_skeletons"),(0,n.mdx)("td",{parentName:"tr",align:null},"Int"),(0,n.mdx)("td",{parentName:"tr",align:null},"Number of skeletons tracked in the sequence")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"gt_creation_time"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Date and timestamp of when the data was collected")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"activity"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Activity name associated with this sequence. Go to ",(0,n.mdx)("a",{parentName:"td",href:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/#activities"},"ADT Documentation for a list of activities"),".")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"visible_object_names"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Objects that were visible in the sequence. An object is considered visible if the visibility ratio is larger than 0 for at least one frame")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"visible_object_categories"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Categories of objects that were visible in the sequence. This filters by categories object included in the visible_object_names list")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"object_names_interacted_with"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Objects that have been moved during the sequence. An object is considered to have been moved if the total motion is greater than 0.5m")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"object_categories_interacted_with"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Categories of objects that have been moved during the sequence. This filters by categories of object that were included in the object_names_interacted_with list")))),(0,n.mdx)("p",null,"Go to ",(0,n.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/"},"ADT Documentation")," for more details."),(0,n.mdx)("h3",{id:"nymeria-specific-filters"},"Nymeria Specific Filters"),(0,n.mdx)("table",null,(0,n.mdx)("thead",{parentName:"table"},(0,n.mdx)("tr",{parentName:"thead"},(0,n.mdx)("th",{parentName:"tr",align:null},(0,n.mdx)("strong",{parentName:"th"},"Name")),(0,n.mdx)("th",{parentName:"tr",align:null},(0,n.mdx)("strong",{parentName:"th"},"Type")),(0,n.mdx)("th",{parentName:"tr",align:null},(0,n.mdx)("strong",{parentName:"th"},"Description")))),(0,n.mdx)("tbody",{parentName:"table"},(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"date"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Date the data was captured")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"participant_id"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"ID of the participant")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"act_id"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"The index of recording sequences per participant")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"location"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Location where the data was collected")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"script"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Recording script used")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"action_duration_sec"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"Activity duration in second")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"has_two_participants"),(0,n.mdx)("td",{parentName:"tr",align:null},"bool"),(0,n.mdx)("td",{parentName:"tr",align:null},"True, if the sequence has two participants")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"pt2"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"For two-participant sequences, this field records the UID of the other associated sequence. For single-participant sequences, this field is empty.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"body_motion"),(0,n.mdx)("td",{parentName:"tr",align:null},"bool"),(0,n.mdx)("td",{parentName:"tr",align:null},"True, if the sequence includes ground-truth full-body motion")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"[head/left_wrist/right_wrist/observer]","_data"),(0,n.mdx)("td",{parentName:"tr",align:null},"bool"),(0,n.mdx)("td",{parentName:"tr",align:null},"Each individual flag is true, if the sequence includes the raw data from the participant\u2019s Project Aria glasses, participant\u2019s left miniAria wristband, participant\u2019s right miniAria wristband, and observer\u2019s Project Aria glasses, respectively.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"[head/left_wrist/right_wrist/observer]","_slam"),(0,n.mdx)("td",{parentName:"tr",align:null},"bool"),(0,n.mdx)("td",{parentName:"tr",align:null},"Each individual flag is true, if the sequence includes the MPS location output for the participant\u2019s Project Aria glasses, participant\u2019s left miniAria wristband, participant\u2019s right miniAria wristband, and observer\u2019s Project Aria glasses, respectively.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"[head/left_wrist/right_wrist/observer]","_trajectory_m"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"Each float value is the corresponding device moving trajectory length in meters for the participant\u2019s Project Aria glasses, participant\u2019s left miniAria wristband, participant\u2019s right miniAria wristband, and observer\u2019s Project Aria glasses, respectively.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"[head/left_wrist/right_wrist/observer]","_duration_sec"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"Each float value is the device recording time in seconds for the participant\u2019s Project Aria glasses, participant\u2019s left miniAria wristband, participant\u2019s right miniAria wristband, and observer\u2019s Project Aria glasses, respectively.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"[head/observer]","_general_gaze"),(0,n.mdx)("td",{parentName:"tr",align:null},"bool"),(0,n.mdx)("td",{parentName:"tr",align:null},"True, if the sequence includes the generalized eye gaze estimation for the participant and the observer, respectively.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"[head/observer]","_personalized_gaze"),(0,n.mdx)("td",{parentName:"tr",align:null},"bool"),(0,n.mdx)("td",{parentName:"tr",align:null},"True, if the sequence includes the personalized eye gaze estimation for the participant and the observer, respectively.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"timesync"),(0,n.mdx)("td",{parentName:"tr",align:null},"bool"),(0,n.mdx)("td",{parentName:"tr",align:null},"True, if all devices are synchronized.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"motion_narration"),(0,n.mdx)("td",{parentName:"tr",align:null},"bool"),(0,n.mdx)("td",{parentName:"tr",align:null},"True, if the sequence is annotated with body motion narration.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"atomic_action"),(0,n.mdx)("td",{parentName:"tr",align:null},"bool"),(0,n.mdx)("td",{parentName:"tr",align:null},"True, if the sequence is annotated with atomic action.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"activity_summarization"),(0,n.mdx)("td",{parentName:"tr",align:null},"bool"),(0,n.mdx)("td",{parentName:"tr",align:null},"True, if the sequence is annotated with the activity summarization.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"participant_gender"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Assigned gender at birth reported by participants.")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"participant_height_cm"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"Height of the participant in centimeter as measured and used in mocap calibration")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"participant_weight_kg"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"Weight of participants in Kg as self-reported values")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"participant_bmi"),(0,n.mdx)("td",{parentName:"tr",align:null},"float"),(0,n.mdx)("td",{parentName:"tr",align:null},"BMI of participants according to CDC formula")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"participant_age_group"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Age group of participants. Possible values are 18-24, 25-30, 36-40, 41-45, 46-50")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"participant_ethnicity"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"Ethnicity of participants. Possible values are caucasian, hispanic, african american, east asian, south asian, southeast asian, and other/mixed")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"participant_xsens_suit_size"),(0,n.mdx)("td",{parentName:"tr",align:null},"String"),(0,n.mdx)("td",{parentName:"tr",align:null},"XSens suit size worn by participants. Possible values are M, L, XL, 2XL, 4XL")))))}c.isMDXComponent=!0}}]);