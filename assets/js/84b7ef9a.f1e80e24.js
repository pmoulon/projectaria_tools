"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4281],{15680:(t,e,a)=>{a.r(e),a.d(e,{MDXContext:()=>s,MDXProvider:()=>u,mdx:()=>g,useMDXComponents:()=>c,withMDXComponents:()=>p});var o=a(96540);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function n(){return n=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&(t[o]=a[o])}return t},n.apply(this,arguments)}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,o)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,o,r=function(t,e){if(null==t)return{};var a,o,r={},n=Object.keys(t);for(o=0;o<n.length;o++)a=n[o],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(o=0;o<n.length;o++)a=n[o],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=o.createContext({}),p=function(t){return function(e){var a=c(e.components);return o.createElement(t,n({},e,{components:a}))}},c=function(t){var e=o.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},u=function(t){var e=c(t.components);return o.createElement(s.Provider,{value:e},t.children)},m="mdxType",h={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},_=o.forwardRef((function(t,e){var a=t.components,r=t.mdxType,n=t.originalType,i=t.parentName,s=d(t,["components","mdxType","originalType","parentName"]),p=c(a),u=r,m=p["".concat(i,".").concat(u)]||p[u]||h[u]||n;return a?o.createElement(m,l(l({ref:e},s),{},{components:a})):o.createElement(m,l({ref:e},s))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var n=a.length,i=new Array(n);i[0]=_;var l={};for(var d in e)hasOwnProperty.call(e,d)&&(l[d]=e[d]);l.originalType=t,l[m]="string"==typeof t?t:r,i[1]=l;for(var s=2;s<n;s++)i[s]=a[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,a)}_.displayName="MDXCreateElement"},72685:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var o=a(58168),r=(a(96540),a(15680));const n={sidebar_position:70,title:"Creating pointclouds from depth maps & RGB images"},i=void 0,l={unversionedId:"open_datasets/aria_digital_twin_dataset/advanced_tutorials/depth_maps_to_pointcloud",id:"open_datasets/aria_digital_twin_dataset/advanced_tutorials/depth_maps_to_pointcloud",title:"Creating pointclouds from depth maps & RGB images",description:"This tutorial will walk you through how to take the depth maps and RGB images from Aria Digital Twin (ADT) and convert to a colored 3D pointcloud in the Scene coordinate frame.",source:"@site/docs/open_datasets/aria_digital_twin_dataset/advanced_tutorials/depth_maps_to_pointcloud.mdx",sourceDirName:"open_datasets/aria_digital_twin_dataset/advanced_tutorials",slug:"/open_datasets/aria_digital_twin_dataset/advanced_tutorials/depth_maps_to_pointcloud",permalink:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/advanced_tutorials/depth_maps_to_pointcloud",draft:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/open_datasets/aria_digital_twin_dataset/advanced_tutorials/depth_maps_to_pointcloud.mdx",tags:[],version:"current",sidebarPosition:70,frontMatter:{sidebar_position:70,title:"Creating pointclouds from depth maps & RGB images"},sidebar:"tutorialSidebar",previous:{title:"Advanced Tutorials",permalink:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/advanced_tutorials/"},next:{title:"Multi-person Synchronization",permalink:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/advanced_tutorials/multiperson_synchronization"}},d={},s=[{value:"Methodology",id:"methodology",level:2},{value:"Run tutorial notebook",id:"run-tutorial-notebook",level:2},{value:"Step 0 : Install project_aria_tools package and create venv if not already done",id:"step-0--install-project_aria_tools-package-and-create-venv-if-not-already-done",level:3},{value:"Step 1 : Download codebase",id:"step-1--download-codebase",level:3},{value:"Step 2 : Run the tutorial notebook",id:"step-2--run-the-tutorial-notebook",level:3}],p={toc:s},c="wrapper";function u(t){let{components:e,...a}=t;return(0,r.mdx)(c,(0,o.A)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"This tutorial will walk you through how to take the depth maps and RGB images from Aria Digital Twin (ADT) and convert to a colored 3D pointcloud in the Scene coordinate frame."),(0,r.mdx)("p",null,"For more information about the depth maps, go to ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/data_format#depth_imagesvrs"},"ADT Data Formats")),(0,r.mdx)("h2",{id:"methodology"},"Methodology"),(0,r.mdx)("p",null,"ADT provides a depth map corresponding to each Aria image for each of the 3 cameras (1 RGB and 2 SLAM)."),(0,r.mdx)("p",null,"To create a combined 3D pointcloud with color, the tutorial will:"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Get RGB image timestamps"),(0,r.mdx)("li",{parentName:"ol"},"iterate through the timestamps and sample the RGB image and depth image with that timestamp"),(0,r.mdx)("li",{parentName:"ol"},"get the camera pose at the query timestamp"),(0,r.mdx)("li",{parentName:"ol"},"iterate through all pixels and get the RGB & XYZ data:",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"back project pixel coordinate using the camera model to get the ray direction"),(0,r.mdx)("li",{parentName:"ul"},"get the ray depth from depth map using the current pixel coordinates"),(0,r.mdx)("li",{parentName:"ul"},"get the 3D point in the camera frame by multiplying the ray by its depth"),(0,r.mdx)("li",{parentName:"ul"},"transform the point from the camera frame to scene frame using the camera pose"),(0,r.mdx)("li",{parentName:"ul"},"assign RGB values using the RGB image with the current pixel coordinates")))),(0,r.mdx)("h2",{id:"run-tutorial-notebook"},"Run tutorial notebook"),(0,r.mdx)("p",null,"You can run this tutorial on Google Colab via the ",(0,r.mdx)("a",{parentName:"p",href:"https://colab.research.google.com/github/facebookresearch/projectaria_tools/blob/main/projects/AriaDigitalTwinDatasetTools/examples/adt_depth_maps_to_pointcloud_tutorial.ipynb"},"ADT Depth Maps to Pointcloud Tutorial"),"."),(0,r.mdx)("p",null,"To run the notebook locally using Jupyter, follow these steps:"),(0,r.mdx)("h3",{id:"step-0--install-project_aria_tools-package-and-create-venv-if-not-already-done"},"Step 0 : Install project_aria_tools package and create venv if not already done"),(0,r.mdx)("p",null,"Follow Step 0 to Step 3 in ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/getting_started"},"Getting Started"),"."),(0,r.mdx)("h3",{id:"step-1--download-codebase"},"Step 1 : Download codebase"),(0,r.mdx)("p",null,"Follow the instructions in ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_utilities/installation/download_codebase#download-codebase"},"Download codebase")," to clone the code"),(0,r.mdx)("h3",{id:"step-2--run-the-tutorial-notebook"},"Step 2 : Run the tutorial notebook"),(0,r.mdx)("p",null,"From your Python virtual environment, run:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"cd $HOME/Documents/projectaria_sandbox\n\njupyter notebook projectaria_tools/projects/AriaDigitalTwinDatasetTools/examples/adt_depth_maps_to_pointcloud_tutorial.ipynb\n")),(0,r.mdx)("p",null,"This notebook automatically downloads the 10s sample sequence. Feel free to use the ADT downloader to try on other sequences!"))}u.isMDXComponent=!0}}]);