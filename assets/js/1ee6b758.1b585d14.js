"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8998],{15680:(e,t,a)=>{a.r(t),a.d(t,{MDXContext:()=>d,MDXProvider:()=>u,mdx:()=>x,useMDXComponents:()=>p,withMDXComponents:()=>c});var i=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(){return n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(e[i]=a[i])}return e},n.apply(this,arguments)}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,i,r=function(e,t){if(null==e)return{};var a,i,r={},n=Object.keys(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=i.createContext({}),c=function(e){return function(t){var a=p(t.components);return i.createElement(e,n({},t,{components:a}))}},p=function(e){var t=i.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return i.createElement(d.Provider,{value:t},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},v=i.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(a),u=r,m=c["".concat(o,".").concat(u)]||c[u]||f[u]||n;return a?i.createElement(m,l(l({ref:t},d),{},{components:a})):i.createElement(m,l({ref:t},d))}));function x(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,o=new Array(n);o[0]=v;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<n;d++)o[d]=a[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,a)}v.displayName="MDXCreateElement"},13734:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var i=a(58168),r=(a(96540),a(15680));const n={sidebar_position:10,title:"Overview"},o="Project Aria Tools, Data Utilities",l={unversionedId:"data_utilities/data_utilities",id:"data_utilities/data_utilities",title:"Overview",description:"Overview",source:"@site/docs/data_utilities/data_utilities.mdx",sourceDirName:"data_utilities",slug:"/data_utilities/",permalink:"/projectaria_tools/docs/data_utilities/",draft:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/data_utilities/data_utilities.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Overview"},sidebar:"tutorialSidebar",previous:{title:"3D Coordinate Frame Conventions",permalink:"/projectaria_tools/docs/data_formats/coordinate_convention/3d_coordinate_frame_convention"},next:{title:"Getting Started",permalink:"/projectaria_tools/docs/data_utilities/getting_started"}},s={},d=[{value:"Overview",id:"overview",level:2}],c={toc:d},p="wrapper";function u(e){let{components:t,...a}=e;return(0,r.mdx)(p,(0,i.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"project-aria-tools-data-utilities"},"Project Aria Tools, Data Utilities"),(0,r.mdx)("h2",{id:"overview"},"Overview"),(0,r.mdx)("p",null,"Project Aria Tools provides Python and C++ APIs. This section provides a detailed walk through of installation, visualization, code tutorials and snippets."),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/getting_started"},"Getting started"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"A quickstart to install Project Aria Tools using a Python package followed by tutorials in Jupyter notebook. It contains:",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"Dataprovider quickstart tutorial: a walk-through of accessing sensor data from VRS file, obtaining sensor calibrations and accessing project/unproject functionalities, undistorting an image, etc."),(0,r.mdx)("li",{parentName:"ul"},"Machine Perception Services (MPS) quickstart tutorial: How to visualize MPS derived data (gaze, trajectory, and point cloud)"))))),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Visualizers"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"In this tutorial we introduce how to visualizing Aria data and MPS data",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/visualization/visualization_python"},"Python Visualization")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/visualization/visualization_cpp"},"C++ Visualization")))))),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Installation guide"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"Various installation processes for Project Aria Tools API in Python and C++"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/installation/build_with_cmake"},"How to add CMake to your projects")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/installation/troubleshooting"},"Install and Build Troubleshooting")))),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Core Code Snippets"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"Python and C++ code snippets for Project Aria Tools core functionality",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/core_code_snippets/data_provider"},"Data Provider"),": open and load Aria raw data (VRS files)"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/core_code_snippets/image"},"Image"),": Access and manage Aria images"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/core_code_snippets/calibration"},"Calibration"),": Access device, 6DoF and sensor calibration"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/core_code_snippets/mps"},"MPS"),": How to work with Aria derived data generated by Project Aria's Machine Perception Services"))))),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Advanced Code Snippets"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/advanced_code_snippets/plotting_sensor_data"},"Plotting Sensor Data (Python)"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"Save images as PNG"),(0,r.mdx)("li",{parentName:"ul"},"Plot the raw sensor data of a VRS file and store the plots in PDF files"))),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/advanced_code_snippets/image_utilities"},"Image Utilities (Python and C++)")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/data_utilities/advanced_code_snippets/vrs_to_mp4"},"Export VRS to MP4 (Python)"))))))}u.isMDXComponent=!0}}]);